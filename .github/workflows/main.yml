name: Python application

on:
  push:
    branches: [ 'playscribebot/*', 'main' ]
    paths: [ examples/input.txt ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
      REGISTRY_NAME: ${{ vars.REGISTRY_NAME }}
      DOCKER: ${{ vars.DOCKER }}
      DOCKER_IMAGE: ${{ vars.DOCKER_IMAGE }}
      DOCKER_TAG_VERSION: ${{ vars.DOCKER_TAG_VERSION }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Check environment variables
      run: |
        if [ -z $OPENAI_API_KEY ] || [ -z $REGISTRY_USER ] || [ -z $REGISTRY_NAME ] || [ -z $DOCKER ] || [ -z $DOCKER_IMAGE ] || [ -z $DOCKER_TAG_VERSION ]; then
          echo [ERROR] Missing one of CI variables [OPENAI_API_KEY, REGISTRY_USER, REGISTRY_NAME, DOCKER, DOCKER_IMAGE, DOCKER_TAG_VERSION].
          exit 1
        fi
        $DOCKER run --rm --env OPENAI_API_KEY=$OPENAI_API_KEY -i $REGISTRY_NAME/$REGISTRY_USER/$DOCKER_IMAGE:$DOCKER_TAG_VERSION --listmodels
    - name: Run application
      if: ${{ hashFiles('examples/input.txt') != '' }}
      run: |
        export URL=$( cat examples/input.txt | cut -d ' ' -f 2 )
        export ID=$( cat examples/input.txt | cut -d ' ' -f 1 )
        if [ -z $URL ] || [ -z $ID ]; then
          echo [ERROR] Missing one of input variables [ID, URL].
          exit 1
        fi
        echo $URL && source ./make.sh && get_output $URL
        echo "# ELI5" > examples/result$ID.txt
        cat output.txt | $DOCKER run --rm --env OPENAI_API_KEY=$OPENAI_API_KEY -i $REGISTRY_NAME/$REGISTRY_USER/$DOCKER_IMAGE:$DOCKER_TAG_VERSION --pattern create_story_explanation >> examples/result$ID.txt
        echo "" >> examples/result$ID.txt
        cat output.txt | $DOCKER run --rm --env OPENAI_API_KEY=$OPENAI_API_KEY -i $REGISTRY_NAME/$REGISTRY_USER/$DOCKER_IMAGE:$DOCKER_TAG_VERSION --pattern extract_article_wisdom >> examples/result$ID.txt
        echo "URL: $URL" >> examples/result$ID.txt
        cat examples/result$ID.txt && rm output.txt
        if [[ -f examples/result$ID.txt ]] && [[ -n `git status --porcelain examples/result$ID.txt` ]]; then
          git config --global user.email "playscribebot@telegram.org"
          git config --global user.name "Telegram Bot"
          date_older=$( date -d "90 days ago" +%Y%m%d )
          file_older=$( ls examples | awk -v date=$date_older ' { i = substr($0, 7, 8) } i < date {print $0} ' )
          echo $date_older
          echo $file_older
          if ! [ -z $file_older ]; then
            ls examples | awk -v date=$date_older ' { i = substr($0, 7, 8) } i < date {print $0} ' | xargs git rm
          fi
          git add examples/result$ID.txt
          git commit -m "Update result$ID.txt"
          git push origin ${{ github.ref_name }}
        fi